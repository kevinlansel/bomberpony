
Idée de bonus :
-> Histoire (avec boss)
-> Différents types de bombe
-> Coup de poing
-> Malus : inversion de touches
-> Malus : Lenteur
-> Malus : Bombe qui se pose seul
-> Son à la prise d'un objet
-> Invincible pendant un petit moment
-> Limite de temps
-> Remplissage de la map
-> Téléporteur
-> Modification de théme

OBLIGATOIRE : Affichage du score

Algo:								 _ _ _ _ _
Difficutlté :							|x|_|_|_|x|
	- Easy -> Full Random					|_|x|_|x|_|
	- Medium -> essaye de ne pas se tuer.			|_|_|o|_|_|		x -> mur
	- Hard -> Focus sur un joueur.				|_|x|_|x|_|		o -> Bonhomme
								|x|_|_|_|x|
	Taille Minimal = nbr joueur x 5

Memoire:
	Obstacle :
	- list  -> x
		-> y
		-> enum Type

	Bonus = Interface ou Abstract
	Liste des Bonus présent:
		-> x
		-> y
		-> type

	Liste des Joueurs:
		-> x
		-> y
		-> boold Dead
		-> ? Bonus -> ? Struct

Timer:
	0 -> Match Nul !

Autre:
	-> Son
	-> Bombe
	-> Mort
	-> Victoire
	-> item

Repartition:
	1-2 IA
	1-2 Gestion Bombe / Obstacle / Bonus (item)
	1   Gestion Map
	1   Gestion Joueur (input prise de bonus)

if ()
else if()
else()
MAXIMUM !

A Ne pas Supprimer !
http://www.yuml.me/diagram/scruffy;/class/edit///%20Cool%20Class%20Diagram,%20[Obj]++-%3E[Bonus],%20[Obj]++-%3E[Obstacle],%20[OBJ]++-%3E[Bombe],%20[Joueur],%20[Display],%20[Map],%20[Controller],%20[Menu],%20[Thread]

___________________________________________________________________________________________

Bot :

3 mode de jeux
- EASY
- MEDIUM
- HARD

EASY :
		Full random, il se déplace dans n'importe quel direction et pose des bombes aléatoirement

MEDIUM :
		Semi random, il a un mode ~DEFENSIF~ qui lui permet d'éviter les bombes mais pose des bombes aléatoirement sans se coincé

HARD :
		Tout est calculé, il a un mode ~DEFENSIF~ comme le MEDIUM et un mode ~OFFENSIF~ qui lui permet de target des cibles pour poser les bombes

~DEFENSIF~ :
		Check la map pour vérifier les zones dangereuse et s'en échaper
		      - Vérification des 4 directions autour de lui et calcul du chemin le plus court à chaque refresh pour s'échapper jusqu'a ce qu'il soit safe et passer en mode ~OFFENSIF~

~OFFENSIF~ :
		Si il n'est pas en danger, target une cible et détruit les blocks qui le génes pour allez jusqu'à ce point
		      - Une partie ~DEFENSIF~ est intégré pour ne pas se coincé, faire un TRY_PUT_BOMB et passé la vérification defensive



Defensif :

X-Créer une map (vector) de bombes et explosions => prend la liste de bombe et retourn la map de bombe
-Pondère les directions où aller => prend la map de bombe et retourne la map de pondération de direction
-check si c'est possible suivant les obstacles et bombes => prend la liste d'obstacle et la map de pondération de direction et retourne la direction où aller (enum)
X-move prend la direction où aller (enum)

avec la map :

_|_|_|_|_|_|_|_|_|_    _|_|_|1|_|_|_|_|_|_
_|_|_|o|_|_|_|_|_|_    _|1|1|2|1|1|_|_|_|_
_|_|_|_|_|_|_|_|_|_    _|_|_|1|_|_|_|1|_|_
_|_|_|X|_|_|_|_|_|_    _|_|_|1|_|_|_|1|_|_
_|_|_|_|_|_|_|o|_|_ => _|_|_|1|_|1|1|2|1|1    * à la place de 2 pour pouvoir faire +1 quand y'a une explosion
_|_|_|o|_|_|_|_|_|_    _|1|1|2|1|1|_|1|_|_    (du coup il aurait pu y avoir un 2)
_|_|_|_|_|_|_|_|_|_    _|_|_|1|_|_|_|1|_|_
_|_|_|_|_|_|_|_|_|_    _|_|_|1|_|_|_|_|_|_

_|_|_|_|_|_|_|_|_|_
_|_|_|1|_|_|_|_|_|_
_|_|2|X|3|_|_|_|_|_
_|_|_|1|_|_|_|_|_|_
_|_|_|_|_|_|_|_|_|_
_|_|_|_|_|_|_|_|_|_
_|_|_|_|_|_|_|_|_|_
_|_|_|_|_|_|_|_|_|_
